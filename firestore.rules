rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function getUserRoles(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.roles;
    }

    function isAdmin() {
      return isSignedIn() && getUserRoles(request.auth.uid).hasAny(['admin']);
    }

    function isKitchen() {
      return isSignedIn() && getUserRoles(request.auth.uid).hasAny(['kitchen']);
    }

    match /users/{userId} {
      allow read: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    match /menus/{menuId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /menu_items/{itemId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /orders/{orderId} {
      allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin() || isKitchen());
      allow create, update, delete: if isAdmin();
    }

    match /analytics/{doc} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
  }
}
